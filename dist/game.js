(()=>{"use strict";class e extends Phaser.Scene{constructor(){super("Game"),this.player=null,this.playerSpeed=3,this.paused=!1,this.gameover=!1,this.score={value:0}}preload(){this.load.image("background","https://jsbin-user-assets.s3.amazonaws.com/fariazz/original-background.png"),this.load.image("enemy","https://jsbin-user-assets.s3.amazonaws.com/fariazz/dragon.png"),this.load.image("treasure","https://jsbin-user-assets.s3.amazonaws.com/fariazz/treasure.png"),this.load.spritesheet("player","../assets/spritesheets/metalslug_mummy37x45.png",{frameWidth:37,frameHeight:45,endFrame:17})}resetPlayer(){var e;null===(e=this.player)||void 0===e||e.destroy();const s=this.physics.add.sprite(70,180,"player");this.player=s,this.animateSprite(this.player)}resetEnemy(){var e;null===(e=this.enemy)||void 0===e||e.destroy(),this.enemy=this.physics.add.sprite(250,180,"enemy")}resetTreasure(){var e;null===(e=this.treasure)||void 0===e||e.destroy(),this.treasure=this.physics.add.sprite(550,190,"treasure"),this.treasure.setScale(.5)}resetScore(){var e;this.score.value=0,null===(e=this.score.text)||void 0===e||e.setText("0")}resetColliders(){this.physics.add.collider(this.player,this.enemy,((e,s)=>{e.destroy(),this.gameover=!0})),this.physics.add.collider(this.player,this.treasure,((e,s)=>{var t,r;s.destroy(),this.score.value+=1e3,null===(t=this.score.text)||void 0===t||t.setText(String(this.score.value)),console.log(null===(r=this.score.text)||void 0===r?void 0:r.text)}))}resetGame(){this.resetPlayer(),this.resetTreasure(),this.resetEnemy(),this.resetColliders()}create(){const e=this.add.sprite(0,0,"background");this.add.text(0,0,"Score: ",{fontFamily:'Georgia, "Goudy Bookletter 1911", Times, serif'}),this.score.text=this.add.text(50,0,"0",{fontFamily:'Georgia, "Goudy Bookletter 1911", Times, serif'}),console.log(this.score.text.text),e.setOrigin(0,0),this.resetGame(),this.cursors=this.input.keyboard.createCursorKeys(),this.input.keyboard.on("keydown",(e=>{"Escape"===e.key&&(this.paused=!this.paused),console.log(e.key),"Enter"===e.key&&this.resetGame()})),this.animateSprite()}animateSprite(e){const s=null!=e?e:this.add.sprite(40,100,"player");console.log("sprite anims: ",s.anims),s.anims.create({key:"walk",repeat:-1,frames:"player",duration:2e3}),console.log(s.anims.exists("walk")),s.anims.play("walk")}update(){this.paused||(this.gameover&&confirm("Game over! Do you want to restart?")&&(this.gameover=!1,this.resetGame()),this.moveEnemy(this.enemy,5),this.movePlayer())}moveEnemy(e,s){e.movedRight?e.x>250?e.x-=s:(e.movedLeft=!0,e.movedRight=!1):e.x<500?e.x+=s:(e.movedLeft=!1,e.movedRight=!0)}movePlayer(){var e,s;(null===(e=this.player)||void 0===e?void 0:e.x)&&(null===(s=this.player)||void 0===s?void 0:s.y)&&(this.cursors.left.isDown&&(this.player.x-=this.playerSpeed),this.cursors.right.isDown&&(this.player.x+=this.playerSpeed),this.cursors.up.isDown&&(this.player.y-=this.playerSpeed),this.cursors.down.isDown&&(this.player.y+=this.playerSpeed))}}const s={type:Phaser.AUTO,width:640,height:480,scene:e,physics:{default:"arcade",arcade:{debug:!1}}},t=new Phaser.Game(s);console.log(t)})();
//# sourceMappingURL=game.js.map